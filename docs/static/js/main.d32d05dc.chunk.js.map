{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["require","config","App","jpyc","ERC20Asset","id","name","network","address","core","BurnerCore","signers","InjectedSigner","LocalSigner","gateways","InfuraGateway","process","XDaiGateway","assets","xdai","dai","eth","className","ModernUI","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kqBAOAA,EAAQ,KAAUC,SAwBHC,MAtBf,WACE,IAAMC,EAAO,IAAIC,aAAW,CAC1BC,GAAI,OACJC,KAAM,WACNC,QAAS,MACTC,QAAS,+CAELC,EAAO,IAAIC,IAAW,CAC1BC,QAAS,CAAC,IAAIC,IAAkB,IAAIC,eACpCC,SAAU,CAAC,IAAIC,gBAAcC,oCAAmC,IAAIC,eACpEC,OAAQ,CAACC,OAAMC,MAAKC,MAAKlB,KAG3B,OACE,qBAAKmB,UAAU,MAAf,SACE,cAACC,EAAA,EAAD,CACId,KAAMA,OCbDe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d32d05dc.chunk.js","sourcesContent":["import './App.css';\nimport BurnerCore from \"@burner-wallet/core\";\nimport InjectedSigner from \"@burner-wallet/core/signers/InjectedSigner\";\nimport {LocalSigner} from \"@burner-wallet/core/signers\";\nimport {InfuraGateway, XDaiGateway} from \"@burner-wallet/core/gateways\";\nimport { xdai, dai, eth, ERC20Asset } from '@burner-wallet/assets';\nimport ModernUI from \"@burner-wallet/modern-ui\";\nrequire('dotenv').config();\n\nfunction App() {\n  const jpyc = new ERC20Asset({\n    id: 'JPYC',\n    name: 'JPY Coin',\n    network: '100',\n    address: '0x417602f4fbdd471A431Ae29fB5fe0A681964C11b',\n  });\n  const core = new BurnerCore({\n    signers: [new InjectedSigner(), new LocalSigner()],\n    gateways: [new InfuraGateway(process.env.REACT_APP_INFURA_KEY), new XDaiGateway()],\n    assets: [xdai, dai, eth, jpyc],\n  });\n\n  return (\n    <div className=\"App\">\n      <ModernUI\n          core={core}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}